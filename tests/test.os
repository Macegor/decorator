#Использовать ".."
#Использовать "./fixtures"
#Использовать asserts

&Тест
Процедура ПроксиСоздается() Экспорт
	Прокси = Новый КонструкторПрокси(Новый МойКласс).Построить();

	Ожидаем.Что(ОбработкаПроксиОбъекта.ИсходныйТип(Прокси)).Равно(Тип("МойКласс"));
КонецПроцедуры

&Тест
Процедура ФункцииОбъектаНаследуются() Экспорт
	Прокси = Новый КонструкторПрокси(Новый МойКласс).Построить();

	Ожидаем.Что(Прокси.ТестоваяФункция()).Равно(1);
КонецПроцедуры

&Тест
Процедура ПоляОбъектаНаследуются() Экспорт

	МойКласс = Новый МойКласс;
	МойКласс.Поле = 123;

	Прокси = Новый КонструкторПрокси(МойКласс).Построить();

	Ожидаем.Что(Прокси.Поле).Равно(123);
КонецПроцедуры

&Тест
Процедура ПоляОбъектаСинхронизируютсяЯвно() Экспорт
	МойКласс = Новый МойКласс;
	МойКласс.Поле = 123;

	Прокси = Новый КонструкторПрокси(МойКласс).Построить();
	
	Ожидаем.Что(Прокси.Поле).Равно(МойКласс.Поле);
КонецПроцедуры

&Тест
Процедура ПоляОбъектаСинхронизируютсяОбратно() Экспорт
	МойКласс = Новый МойКласс;
	МойКласс.Поле = 123;

	Прокси = Новый КонструкторПрокси(МойКласс).Построить();
	Прокси.ИзменитьЗначениеПоля(100);

	Ожидаем.Что(Прокси.Поле).Равно(100);
КонецПроцедуры