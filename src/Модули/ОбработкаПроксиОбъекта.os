#Использовать reflector

Перем Рефлектор;

Функция ИсходныйТип(Прокси) Экспорт
	Рефлектор = Новый Рефлектор();
	
	Попытка
		ИсходныйОбъект = Рефлектор.ПолучитьСвойство(Прокси, Константы_Прокси.Поле_ИнстансОбъекта);
		Возврат ИсходныйТип(ИсходныйОбъект);
	Исключение
		Возврат ТипЗнч(Прокси);
	КонецПопытки;
	
КонецФункции

Процедура СинхронизироватьПоля(ИсходныйОбъект, Потребитель) Экспорт
	СвойстваИсходногоОбъекта = Новый РефлекторОбъекта(ИсходныйОбъект).ПолучитьТаблицуСвойств();
	РефлекторПотребителя = Новый РефлекторОбъекта(Потребитель);
	
	Для Каждого Свойство Из СвойстваИсходногоОбъекта Цикл
		ИмяСвойства = Свойство.Имя;
		
		Если НЕ РефлекторПотребителя.ЕстьСвойство(ИмяСвойства) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеСвойства = Рефлектор.ПолучитьСвойство(ИсходныйОбъект, ИмяСвойства);
		Рефлектор.УстановитьСвойство(Потребитель, ИмяСвойства, ЗначениеСвойства);
	КонецЦикла;
КонецПроцедуры

#Область Инициализация

Рефлектор = Новый Рефлектор();

//#КонецОбласти
